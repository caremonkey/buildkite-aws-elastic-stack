#!/bin/bash

set -eu -o pipefail

s3_exists() {
  env -i aws s3 ls "$1" --summarize --human-readable | \
    # `s3 ls` does wildcard matching, so `private_ssh_key` matches `private_ssh_key_old`, e.g.:
    # 2016-03-01 17:40:53    1.6 KiB private_ssh_key_old
    #
    # So we need to grep the output for an exact filename match
    grep "$(basename "$1")\$"
}

s3_download() {
  local aws_s3_args=("--quiet")

  if [[ -n "${BUILDKITE_SECRETS_KEY:-}" ]] ; then
    aws_s3_args+=("--sse-c" "AES256" "--sse-c-key" "${BUILDKITE_SECRETS_KEY}")
  fi

  env -i aws s3 cp ${aws_s3_args[@]} "$1" /dev/stdout
}

echo "~~~ :house_with_garden: Setting up the environment"

eval "$(cat ~/cfn-env)"
eval "$(ssh-agent -s)"

if [[ -n "${BUILDKITE_SECRETS_BUCKET:-}" ]] ; then

  # Allow environment vars set in Buildkite to override paths
  secrets_prefix="${BUILDKITE_SECRETS_PREFIX:-$BUILDKITE_PIPELINE_SLUG}"
  secrets_url_base="s3://${BUILDKITE_SECRETS_BUCKET}/${secrets_prefix}"
  ssh_key_url="${secrets_url_base}/${SSH_KEY_NAME:-private_ssh_key}"
  legacy_ssh_key_url="${secrets_url_base}/id_rsa_github"
  shared_ssh_key_url="s3://${BUILDKITE_SECRETS_BUCKET}/${SHARED_SSH_KEY_NAME:-private_ssh_key}"
  env_url="${secrets_url_base}/env"

  if s3_exists "$ssh_key_url" ; then
    echo "Downloading ssh key from $ssh_key_url"
    ssh-add <(s3_download "$ssh_key_url")
  elif s3_exists "$legacy_ssh_key_url" ; then
    echo "Downloading ssh key from $legacy_ssh_key_url"
    ssh-add <(s3_download "$legacy_ssh_key_url")
  elif s3_exists "$shared_ssh_key_url" ; then
    echo "Downloading ssh key from $shared_ssh_key_url"
    ssh-add <(s3_download "$shared_ssh_key_url")
  else
    echo "No SSH keys found in s3://${BUILDKITE_SECRETS_BUCKET}"
  fi

  if s3_exists "$env_url" ; then
    echo "Downloading env from $env_url"
    eval "$(s3_download $env_url)"
  fi
fi

echo "~~~ Waiting for :docker:"
timeout 30 docker ps

if [[ $(docker ps -q | wc -l) -gt 0 ]] ; then
  echo "~~~ Stopping existing :docker: containers"
  docker stop $(docker ps -q)
fi

unset BUILDKITE_SECRETS_BUCKET
unset BUILDKITE_SECRETS_KEY

sudo /usr/bin/fix-buildkite-agent-builds-permissions
